plugins {
    id 'java'
    id 'maven-publish'
}

group = 'jp.momonnga'
version = '1.0.0'

tasks.withType(AbstractCompile)*.options*.encoding = 'utf-8'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.6-R0.1-SNAPSHOT'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

def loadLocalProperties = {
    def propsFile = rootProject.file("local.properties")
    if (propsFile.exists()) {
        def props = new Properties()
        propsFile.withInputStream { props.load(it) }
        return props
    }
    return new Properties()
}

def properties = loadLocalProperties()

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/momonnga25252/wallkick'
            credentials {
                username = properties.getProperty("gpr.user") ?: System.getenv("USERNAME")
                password = properties.getProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        //noinspection GroovyAssignabilityCheck
        gpr(MavenPublication) {
            //noinspection GroovyAssignabilityCheck
            from(components.java)
        }
    }
}
